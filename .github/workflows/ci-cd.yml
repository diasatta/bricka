
name: ci-cd

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.11

      # Checks-out your repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v3

      - name: Install poetry
        uses: snok/install-poetry@v1

      - name: Install package
        run: poetry install

      - name: Test with pytest
        run: poetry run pytest tests/ --cov=bricka --cov-report=xml  

      - name: Use Codecov to track coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml

  cd:
    permissions:
      id-token: write
      contents: write

    needs: ci

    if: github.event_name == 'push' && github.ref == 'refs/heads/main'  
    
    runs-on: ubuntu-latest

    steps:
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.11

    - name: Check-out repository
      uses: actions/checkout@v3
      # with:
      #   fetch-depth: 0

    # - name: Publish to TestPyPI
    #   uses: pypa/gh-action-pypi-publish@release/v1
    #   if: steps.release.outputs.released == 'true'
    #   with:
    #     repository-url: https://test.pypi.org/legacy/
    #     password: ${{ secrets.TEST_PYPI_API_TOKEN }}  
        
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      # if: steps.release.outputs.released == 'true'
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}    
        
    # - name: Publish package distributions to GitHub Releases
    #   uses: python-semantic-release/upload-to-gh-release@main
    #   if: steps.release.outputs.released == 'true'
    #   with:
    #     github_token: ${{ secrets.GH_TOKEN }}    
